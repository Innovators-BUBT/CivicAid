{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default configuration\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\nAPI.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// User API functions\nexport const registerUser = data => API.post('/users/register', data);\nexport const loginUser = data => API.post('/users/login', data);\nexport const forgotPassword = data => API.post('/users/forgot-password', data);\nexport const resetPassword = data => API.post('/users/reset-password', data);\nexport const getUserProfile = () => API.get('/users/profile');\nexport const updateUserProfile = data => API.put('/users/profile', data);\n\n// Complaint API functions\nexport const submitComplaint = data => API.post('/complaints/submit', data);\nexport const getUserComplaints = params => API.get('/complaints/my-complaints', {\n  params\n});\nexport const getComplaintById = id => API.get(`/complaints/${id}`);\nexport const updateComplaint = (id, data) => API.put(`/complaints/${id}`, data);\nexport const deleteComplaint = id => API.delete(`/complaints/${id}`);\nexport const searchComplaints = params => API.get('/complaints/search', {\n  params\n});\nexport const addComment = (id, data) => API.post(`/complaints/${id}/comments`, data);\n\n// Admin API functions\nexport const getAllComplaints = params => API.get('/complaints/admin/all', {\n  params\n});\nexport const updateComplaintStatus = (id, data) => API.put(`/complaints/admin/${id}/status`, data);\nexport const assignComplaint = (id, data) => API.put(`/complaints/admin/${id}/assign`, data);\nexport const getComplaintStats = () => API.get('/complaints/admin/stats');\nexport const getAllUsers = () => API.get('/users');\nexport const getAvailableVolunteers = () => API.get('/users/available-volunteers');\n\n// Task API functions\nexport const createTask = data => API.post('/tasks', data);\nexport const getTasks = () => API.get('/tasks');\nexport const getMyTasks = () => API.get('/tasks/my-tasks');\nexport const getTaskById = id => API.get(`/tasks/${id}`);\nexport const updateTask = (id, data) => API.put(`/tasks/${id}`, data);\nexport const deleteTask = id => API.delete(`/tasks/${id}`);\nexport const assignTask = (id, data) => API.put(`/tasks/${id}/assign`, data);\nexport const updateTaskProgress = (id, data) => API.put(`/tasks/${id}/progress`, data);\nexport const getTaskStats = () => API.get('/tasks/stats');\nexport const getAvailableAssignees = params => API.get('/tasks/available-assignees', {\n  params\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","registerUser","data","post","loginUser","forgotPassword","resetPassword","getUserProfile","get","updateUserProfile","put","submitComplaint","getUserComplaints","params","getComplaintById","id","updateComplaint","deleteComplaint","delete","searchComplaints","addComment","getAllComplaints","updateComplaintStatus","assignComplaint","getComplaintStats","getAllUsers","getAvailableVolunteers","createTask","getTasks","getMyTasks","getTaskById","updateTask","deleteTask","assignTask","updateTaskProgress","getTaskStats","getAvailableAssignees"],"sources":["D:/Last pc/CivicAid/frontend/src/api/userApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with default configuration\r\nconst API = axios.create({ \r\n  baseURL: 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor to add auth token\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\nAPI.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('userInfo');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// User API functions\r\nexport const registerUser = (data) => API.post('/users/register', data);\r\nexport const loginUser = (data) => API.post('/users/login', data);\r\nexport const forgotPassword = (data) => API.post('/users/forgot-password', data);\r\nexport const resetPassword = (data) => API.post('/users/reset-password', data);\r\nexport const getUserProfile = () => API.get('/users/profile');\r\nexport const updateUserProfile = (data) => API.put('/users/profile', data);\r\n\r\n// Complaint API functions\r\nexport const submitComplaint = (data) => API.post('/complaints/submit', data);\r\nexport const getUserComplaints = (params) => API.get('/complaints/my-complaints', { params });\r\nexport const getComplaintById = (id) => API.get(`/complaints/${id}`);\r\nexport const updateComplaint = (id, data) => API.put(`/complaints/${id}`, data);\r\nexport const deleteComplaint = (id) => API.delete(`/complaints/${id}`);\r\nexport const searchComplaints = (params) => API.get('/complaints/search', { params });\r\nexport const addComment = (id, data) => API.post(`/complaints/${id}/comments`, data);\r\n\r\n// Admin API functions\r\nexport const getAllComplaints = (params) => API.get('/complaints/admin/all', { params });\r\nexport const updateComplaintStatus = (id, data) => API.put(`/complaints/admin/${id}/status`, data);\r\nexport const assignComplaint = (id, data) => API.put(`/complaints/admin/${id}/assign`, data);\r\nexport const getComplaintStats = () => API.get('/complaints/admin/stats');\r\nexport const getAllUsers = () => API.get('/users');\r\nexport const getAvailableVolunteers = () => API.get('/users/available-volunteers');\r\n\r\n// Task API functions\r\nexport const createTask = (data) => API.post('/tasks', data);\r\nexport const getTasks = () => API.get('/tasks');\r\nexport const getMyTasks = () => API.get('/tasks/my-tasks');\r\nexport const getTaskById = (id) => API.get(`/tasks/${id}`);\r\nexport const updateTask = (id, data) => API.put(`/tasks/${id}`, data);\r\nexport const deleteTask = (id) => API.delete(`/tasks/${id}`);\r\nexport const assignTask = (id, data) => API.put(`/tasks/${id}/assign`, data);\r\nexport const updateTaskProgress = (id, data) => API.put(`/tasks/${id}/progress`, data);\r\nexport const getTaskStats = () => API.get('/tasks/stats');\r\nexport const getAvailableAssignees = (params) => API.get('/tasks/available-assignees', { params });\r\n\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}