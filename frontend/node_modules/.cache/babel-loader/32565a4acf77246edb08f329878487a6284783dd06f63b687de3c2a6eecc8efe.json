{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\logno\\\\OneDrive\\\\Desktop\\\\CivicAid\\\\frontend\\\\src\\\\components\\\\DataVisualization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Simple Chart Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleChart = ({\n  data,\n  type = 'bar',\n  height = 200,\n  className = ''\n}) => {\n  // Handle both Chart.js format and simple array format\n  let chartData = data;\n  if (data && data.datasets && data.labels) {\n    // Convert Chart.js format to simple format\n    chartData = data.labels.map((label, index) => ({\n      label: label,\n      value: data.datasets[0].data[index] || 0\n    }));\n  }\n\n  // Ensure data is an array\n  if (!Array.isArray(chartData)) {\n    chartData = [];\n  }\n  const maxValue = chartData.length > 0 ? Math.max(...chartData.map(d => d.value)) : 1;\n  const renderBarChart = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-end justify-between h-full space-x-2\",\n    children: chartData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gradient-to-t from-violet-500 to-purple-600 rounded-t transition-all duration-500 hover:from-violet-600 hover:to-purple-700\",\n        style: {\n          height: `${item.value / maxValue * 100}%`,\n          minHeight: '4px'\n        },\n        title: `${item.label}: ${item.value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-600 mt-1 text-center\",\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  const renderLineChart = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"w-full h-full\",\n    viewBox: `0 0 ${chartData.length * 100} ${height}`,\n    children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n      fill: \"none\",\n      stroke: \"url(#lineGradient)\",\n      strokeWidth: \"3\",\n      points: chartData.map((item, index) => `${index * 100 + 50},${height - item.value / maxValue * height}`).join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n        id: \"lineGradient\",\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"100%\",\n        y2: \"0%\",\n        children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n          offset: \"0%\",\n          stopColor: \"#8b5cf6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n          offset: \"100%\",\n          stopColor: \"#a855f7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n  const renderPieChart = () => {\n    const total = data.reduce((sum, item) => sum + item.value, 0);\n    let currentAngle = 0;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-full h-full\",\n      viewBox: \"0 0 200 200\",\n      children: data.map((item, index) => {\n        const percentage = item.value / total;\n        const angle = percentage * 360;\n        const x1 = 100 + 80 * Math.cos(currentAngle * Math.PI / 180);\n        const y1 = 100 + 80 * Math.sin(currentAngle * Math.PI / 180);\n        const x2 = 100 + 80 * Math.cos((currentAngle + angle) * Math.PI / 180);\n        const y2 = 100 + 80 * Math.sin((currentAngle + angle) * Math.PI / 180);\n        const largeArcFlag = angle > 180 ? 1 : 0;\n        currentAngle += angle;\n        return /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M 100 100 L ${x1} ${y1} A 80 80 0 ${largeArcFlag} 1 ${x2} ${y2} Z`,\n          fill: `hsl(${index * 60}, 70%, 60%)`,\n          className: \"transition-all duration-300 hover:opacity-80\",\n          title: `${item.label}: ${item.value}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  const renderChart = () => {\n    switch (type) {\n      case 'line':\n        return renderLineChart();\n      case 'pie':\n        return renderPieChart();\n      case 'bar':\n      default:\n        return renderBarChart();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-48 flex items-center justify-center\",\n      children: renderChart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n// Statistics Card Component\n_c = SimpleChart;\nconst StatCard = ({\n  title,\n  value,\n  change,\n  changeType = 'neutral',\n  icon,\n  description,\n  className = ''\n}) => {\n  const getChangeColor = () => {\n    switch (changeType) {\n      case 'positive':\n        return 'text-emerald-600';\n      case 'negative':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n  const getChangeIcon = () => {\n    switch (changeType) {\n      case 'positive':\n        return '↗';\n      case 'negative':\n        return '↘';\n      default:\n        return '→';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card p-6 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), change && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-sm font-semibold ${getChangeColor()}`,\n        children: [getChangeIcon(), \" \", change]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-900 mb-2\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-3xl font-bold text-gray-900 mb-2\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-600\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n// Progress Ring Component\n_c2 = StatCard;\nconst ProgressRing = ({\n  progress,\n  size = 120,\n  strokeWidth = 8,\n  label,\n  className = ''\n}) => {\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const strokeDasharray = circumference;\n  const strokeDashoffset = circumference - progress / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      style: {\n        width: size,\n        height: size\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-full h-full transform -rotate-90\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: size / 2,\n          cy: size / 2,\n          r: radius,\n          stroke: \"#e5e7eb\",\n          strokeWidth: strokeWidth,\n          fill: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: size / 2,\n          cy: size / 2,\n          r: radius,\n          stroke: \"url(#progressGradient)\",\n          strokeWidth: strokeWidth,\n          fill: \"transparent\",\n          strokeDasharray: strokeDasharray,\n          strokeDashoffset: strokeDashoffset,\n          strokeLinecap: \"round\",\n          className: \"transition-all duration-1000 ease-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"progressGradient\",\n            x1: \"0%\",\n            y1: \"0%\",\n            x2: \"100%\",\n            y2: \"0%\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0%\",\n              stopColor: \"#8b5cf6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"100%\",\n              stopColor: \"#a855f7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-gray-900\",\n            children: [Math.round(progress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), label && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n// Data Table Component\n_c3 = ProgressRing;\nconst DataTable = ({\n  data,\n  columns,\n  className = '',\n  sortable = true\n}) => {\n  _s();\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [sortedData, setSortedData] = useState(data);\n  useEffect(() => {\n    setSortedData(data);\n  }, [data]);\n  const handleSort = key => {\n    if (!sortable) return;\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    const sorted = [...data].sort((a, b) => {\n      if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\n      if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n    setSortConfig({\n      key,\n      direction\n    });\n    setSortedData(sorted);\n  };\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) return '↕';\n    return sortConfig.direction === 'asc' ? '↑' : '↓';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `overflow-x-auto rounded-2xl shadow-lg ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full divide-y divide-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-50/80 backdrop-blur-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(column.key),\n            className: `\n                  px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\n                  ${sortable ? 'cursor-pointer hover:text-gray-700' : ''}\n                `,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), sortable && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: getSortIcon(column.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, column.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"bg-white/90 backdrop-blur-sm divide-y divide-gray-200\",\n        children: sortedData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-gray-50/80 transition-colors duration-200\",\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n            children: column.render ? column.render(row[column.key], row) : row[column.key]\n          }, column.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Data Visualization Component\n_s(DataTable, \"8UFX+y+lkuHD5jVaPA+huUwEeEU=\");\n_c4 = DataTable;\nconst DataVisualization = ({\n  type = 'chart',\n  data = [],\n  config = {},\n  className = '',\n  title,\n  description\n}) => {\n  const renderContent = () => {\n    switch (type) {\n      case 'chart':\n        return /*#__PURE__*/_jsxDEV(SimpleChart, {\n          data: data,\n          type: config.chartType || 'bar',\n          height: config.height || 200,\n          className: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this);\n      case 'stats':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",\n          children: data.map((stat, index) => /*#__PURE__*/_jsxDEV(StatCard, {\n            ...stat\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this);\n      case 'progress':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-8\",\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ProgressRing, {\n            progress: item.progress,\n            label: item.label,\n            size: config.size || 120,\n            strokeWidth: config.strokeWidth || 8\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this);\n      case 'table':\n        return /*#__PURE__*/_jsxDEV(DataTable, {\n          data: data,\n          columns: config.columns || [],\n          sortable: config.sortable !== false,\n          className: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Unsupported visualization type: \", type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [(title || description) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 text-center\",\n      children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-900 mb-2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n};\n_c5 = DataVisualization;\nexport default DataVisualization;\nexport { SimpleChart, StatCard, ProgressRing, DataTable };\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SimpleChart\");\n$RefreshReg$(_c2, \"StatCard\");\n$RefreshReg$(_c3, \"ProgressRing\");\n$RefreshReg$(_c4, \"DataTable\");\n$RefreshReg$(_c5, \"DataVisualization\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SimpleChart","data","type","height","className","chartData","datasets","labels","map","label","index","value","Array","isArray","maxValue","length","Math","max","d","renderBarChart","children","item","style","minHeight","title","fileName","_jsxFileName","lineNumber","columnNumber","renderLineChart","viewBox","fill","stroke","strokeWidth","points","join","id","x1","y1","x2","y2","offset","stopColor","renderPieChart","total","reduce","sum","currentAngle","percentage","angle","cos","PI","sin","largeArcFlag","renderChart","_c","StatCard","change","changeType","icon","description","getChangeColor","getChangeIcon","_c2","ProgressRing","progress","size","radius","circumference","strokeDasharray","strokeDashoffset","width","cx","cy","r","strokeLinecap","round","_c3","DataTable","columns","sortable","_s","sortConfig","setSortConfig","key","direction","sortedData","setSortedData","handleSort","sorted","sort","a","b","getSortIcon","column","onClick","row","render","_c4","DataVisualization","config","renderContent","chartType","stat","_c5","$RefreshReg$"],"sources":["C:/Users/logno/OneDrive/Desktop/CivicAid/frontend/src/components/DataVisualization.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Simple Chart Component\r\nconst SimpleChart = ({ data, type = 'bar', height = 200, className = '' }) => {\r\n  // Handle both Chart.js format and simple array format\r\n  let chartData = data;\r\n  \r\n  if (data && data.datasets && data.labels) {\r\n    // Convert Chart.js format to simple format\r\n    chartData = data.labels.map((label, index) => ({\r\n      label: label,\r\n      value: data.datasets[0].data[index] || 0\r\n    }));\r\n  }\r\n  \r\n  // Ensure data is an array\r\n  if (!Array.isArray(chartData)) {\r\n    chartData = [];\r\n  }\r\n  \r\n  const maxValue = chartData.length > 0 ? Math.max(...chartData.map(d => d.value)) : 1;\r\n  \r\n  const renderBarChart = () => (\r\n    <div className=\"flex items-end justify-between h-full space-x-2\">\r\n      {chartData.map((item, index) => (\r\n        <div key={index} className=\"flex flex-col items-center flex-1\">\r\n          <div\r\n            className=\"w-full bg-gradient-to-t from-violet-500 to-purple-600 rounded-t transition-all duration-500 hover:from-violet-600 hover:to-purple-700\"\r\n            style={{\r\n              height: `${(item.value / maxValue) * 100}%`,\r\n              minHeight: '4px'\r\n            }}\r\n            title={`${item.label}: ${item.value}`}\r\n          />\r\n          <span className=\"text-xs text-gray-600 mt-1 text-center\">{item.label}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const renderLineChart = () => (\r\n    <svg className=\"w-full h-full\" viewBox={`0 0 ${chartData.length * 100} ${height}`}>\r\n      <polyline\r\n        fill=\"none\"\r\n        stroke=\"url(#lineGradient)\"\r\n        strokeWidth=\"3\"\r\n        points={chartData.map((item, index) => \r\n          `${index * 100 + 50},${height - (item.value / maxValue) * height}`\r\n        ).join(' ')}\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"lineGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n          <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\r\n          <stop offset=\"100%\" stopColor=\"#a855f7\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n\r\n  const renderPieChart = () => {\r\n    const total = data.reduce((sum, item) => sum + item.value, 0);\r\n    let currentAngle = 0;\r\n    \r\n    return (\r\n      <svg className=\"w-full h-full\" viewBox=\"0 0 200 200\">\r\n        {data.map((item, index) => {\r\n          const percentage = item.value / total;\r\n          const angle = percentage * 360;\r\n          const x1 = 100 + 80 * Math.cos(currentAngle * Math.PI / 180);\r\n          const y1 = 100 + 80 * Math.sin(currentAngle * Math.PI / 180);\r\n          const x2 = 100 + 80 * Math.cos((currentAngle + angle) * Math.PI / 180);\r\n          const y2 = 100 + 80 * Math.sin((currentAngle + angle) * Math.PI / 180);\r\n          \r\n          const largeArcFlag = angle > 180 ? 1 : 0;\r\n          \r\n          currentAngle += angle;\r\n          \r\n          return (\r\n            <path\r\n              key={index}\r\n              d={`M 100 100 L ${x1} ${y1} A 80 80 0 ${largeArcFlag} 1 ${x2} ${y2} Z`}\r\n              fill={`hsl(${index * 60}, 70%, 60%)`}\r\n              className=\"transition-all duration-300 hover:opacity-80\"\r\n              title={`${item.label}: ${item.value}`}\r\n            />\r\n          );\r\n        })}\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  const renderChart = () => {\r\n    switch (type) {\r\n      case 'line':\r\n        return renderLineChart();\r\n      case 'pie':\r\n        return renderPieChart();\r\n      case 'bar':\r\n      default:\r\n        return renderBarChart();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`w-full ${className}`}>\r\n      <div className=\"h-48 flex items-center justify-center\">\r\n        {renderChart()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Statistics Card Component\r\nconst StatCard = ({ title, value, change, changeType = 'neutral', icon, description, className = '' }) => {\r\n  const getChangeColor = () => {\r\n    switch (changeType) {\r\n      case 'positive':\r\n        return 'text-emerald-600';\r\n      case 'negative':\r\n        return 'text-red-600';\r\n      default:\r\n        return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  const getChangeIcon = () => {\r\n    switch (changeType) {\r\n      case 'positive':\r\n        return '↗';\r\n      case 'negative':\r\n        return '↘';\r\n      default:\r\n        return '→';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`card p-6 ${className}`}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"text-2xl\">{icon}</div>\r\n        {change && (\r\n          <div className={`text-sm font-semibold ${getChangeColor()}`}>\r\n            {getChangeIcon()} {change}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{title}</h3>\r\n      <div className=\"text-3xl font-bold text-gray-900 mb-2\">{value}</div>\r\n      {description && (\r\n        <p className=\"text-sm text-gray-600\">{description}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Progress Ring Component\r\nconst ProgressRing = ({ progress, size = 120, strokeWidth = 8, label, className = '' }) => {\r\n  const radius = (size - strokeWidth) / 2;\r\n  const circumference = radius * 2 * Math.PI;\r\n  const strokeDasharray = circumference;\r\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center ${className}`}>\r\n      <div className=\"relative\" style={{ width: size, height: size }}>\r\n        <svg className=\"w-full h-full transform -rotate-90\">\r\n          {/* Background circle */}\r\n          <circle\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            stroke=\"#e5e7eb\"\r\n            strokeWidth={strokeWidth}\r\n            fill=\"transparent\"\r\n          />\r\n          {/* Progress circle */}\r\n          <circle\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            stroke=\"url(#progressGradient)\"\r\n            strokeWidth={strokeWidth}\r\n            fill=\"transparent\"\r\n            strokeDasharray={strokeDasharray}\r\n            strokeDashoffset={strokeDashoffset}\r\n            strokeLinecap=\"round\"\r\n            className=\"transition-all duration-1000 ease-out\"\r\n          />\r\n          <defs>\r\n            <linearGradient id=\"progressGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n              <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\r\n              <stop offset=\"100%\" stopColor=\"#a855f7\" />\r\n            </linearGradient>\r\n          </defs>\r\n        </svg>\r\n        \r\n        {/* Center text */}\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-gray-900\">{Math.round(progress)}%</div>\r\n            {label && <div className=\"text-sm text-gray-600\">{label}</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Data Table Component\r\nconst DataTable = ({ data, columns, className = '', sortable = true }) => {\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n  const [sortedData, setSortedData] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setSortedData(data);\r\n  }, [data]);\r\n\r\n  const handleSort = (key) => {\r\n    if (!sortable) return;\r\n\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n\r\n    const sorted = [...data].sort((a, b) => {\r\n      if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\r\n      if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    setSortConfig({ key, direction });\r\n    setSortedData(sorted);\r\n  };\r\n\r\n  const getSortIcon = (key) => {\r\n    if (sortConfig.key !== key) return '↕';\r\n    return sortConfig.direction === 'asc' ? '↑' : '↓';\r\n  };\r\n\r\n  return (\r\n    <div className={`overflow-x-auto rounded-2xl shadow-lg ${className}`}>\r\n      <table className=\"min-w-full divide-y divide-gray-200\">\r\n        <thead className=\"bg-gray-50/80 backdrop-blur-sm\">\r\n          <tr>\r\n            {columns.map((column) => (\r\n              <th\r\n                key={column.key}\r\n                onClick={() => handleSort(column.key)}\r\n                className={`\r\n                  px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\r\n                  ${sortable ? 'cursor-pointer hover:text-gray-700' : ''}\r\n                `}\r\n              >\r\n                <div className=\"flex items-center space-x-1\">\r\n                  <span>{column.label}</span>\r\n                  {sortable && <span className=\"text-xs\">{getSortIcon(column.key)}</span>}\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white/90 backdrop-blur-sm divide-y divide-gray-200\">\r\n          {sortedData.map((row, index) => (\r\n            <tr key={index} className=\"hover:bg-gray-50/80 transition-colors duration-200\">\r\n              {columns.map((column) => (\r\n                <td key={column.key} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                  {column.render ? column.render(row[column.key], row) : row[column.key]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Data Visualization Component\r\nconst DataVisualization = ({ \r\n  type = 'chart',\r\n  data = [],\r\n  config = {},\r\n  className = '',\r\n  title,\r\n  description \r\n}) => {\r\n  const renderContent = () => {\r\n    switch (type) {\r\n      case 'chart':\r\n        return (\r\n          <SimpleChart\r\n            data={data}\r\n            type={config.chartType || 'bar'}\r\n            height={config.height || 200}\r\n            className={className}\r\n          />\r\n        );\r\n      case 'stats':\r\n        return (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            {data.map((stat, index) => (\r\n              <StatCard key={index} {...stat} />\r\n            ))}\r\n          </div>\r\n        );\r\n      case 'progress':\r\n        return (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n            {data.map((item, index) => (\r\n              <ProgressRing\r\n                key={index}\r\n                progress={item.progress}\r\n                label={item.label}\r\n                size={config.size || 120}\r\n                strokeWidth={config.strokeWidth || 8}\r\n              />\r\n            ))}\r\n          </div>\r\n        );\r\n      case 'table':\r\n        return (\r\n          <DataTable\r\n            data={data}\r\n            columns={config.columns || []}\r\n            sortable={config.sortable !== false}\r\n            className={className}\r\n          />\r\n        );\r\n      default:\r\n        return <div>Unsupported visualization type: {type}</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {(title || description) && (\r\n        <div className=\"mb-6 text-center\">\r\n          {title && <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">{title}</h2>}\r\n          {description && <p className=\"text-gray-600\">{description}</p>}\r\n        </div>\r\n      )}\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataVisualization;\r\nexport { SimpleChart, StatCard, ProgressRing, DataTable };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}